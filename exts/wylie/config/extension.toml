[package]
# Semantic Versioning is used: https://semver.org/
version = "1.0.0"

# Lists people or organizations that are considered the "authors" of the package.
authors = ["WYLIE"]

# The title and description fields are primarily for displaying extension info in UI
title = "wylie"
description="A simple python extension example to use as a starting point for your extensions."

# Path (relative to the root) or content of readme markdown file for UI.
readme  = "docs/README.md"

# URL of the extension source repository.
repository = ""

# One of categories for UI.
category = "Example"

# Keywords for the extension
keywords = ["kit", "example"]

# Location of change log file in target (final) folder of extension, relative to the root.
# More info on writing changelog: https://keepachangelog.com/en/1.0.0/
changelog="docs/CHANGELOG.md"

# Preview image and icon. Folder named "data" automatically goes in git lfs (see .gitattributes file).
# Preview image is shown in "Overview" of Extensions window. Screenshot of an extension might be a good preview image.
preview_image = "data/preview.png"

# Icon is shown in Extensions window, it is recommended to be square, of size 256x256.
icon = "data/icon.png"

# ================================================
# https://docs.omniverse.nvidia.com/kit/docs/omni.kit.pipapi/latest/Overview.html
[python.pipapi]
# List of additional directories with pip achives to be passed into pip using ``--find-links`` arg.
# Relative paths are relative to extension root. Tokens can be used.
archiveDirs = [""]

# Commands passed to pip install before extension gets enabled. Can also contain flags, like `--upgrade`, `--no--index`, etc.
# Refer to: https://pip.pypa.io/en/stable/reference/requirements-file-format/
requirements = [
    #"torch",
    #"torchvision",
    "roma",
    "gradio",
    "matplotlib",
    "tqdm",
    #"opencv-python",
    "scipy",
    "einops",
    "trimesh",
    "tensorboard",
    #"pyglet<2",
    #"huggingface-hub[torch]>=0.22",
]

# Optional list of modules to import before (check) and after pip install if different from packages in requirements.
modules = [
    #"torch",
    #"torchvision",
    "roma",
    "gradio",
    "matplotlib",
    "tqdm",
    #"opencv-python",
    "scipy",
    "einops",
    "trimesh",
    "tensorboard",
    #"pyglet<2",
    #"huggingface-hub[torch]>=0.22",
]


# Allow going to online index. Required to be set to true for pip install call.
use_online_index = true

# ================================================
# Use omni.ui to build simple UI
[dependencies]
"omni.kit.uiapp" = {}

# Main python module this extension provides, it will be publicly available as "import wylie".
[[python.module]]
name = "wylie"

#[[python.module]]
#path = "torch-1-13-1"

